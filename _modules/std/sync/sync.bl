//! ====
//! Sync
//! ====
//! 
//! ::
//! 
//!    #import "std/sync"
//!
//! Multiplatform implementation of various thread synchronization tools.
//! 
//! .. warning:: This module is experimental and not fully supported across all platforms.

/// Mutex type.
Mutex :: _MutexImpl;

/// Initialize mutex. Call :ref:`mutex_terminate` when mutex is no longer
/// needed.
mutex_init :: fn (mutex: *Mutex) #inline {
    _mutex_impl_init(mutex);
}

/// Terminate mutex.
mutex_terminate :: fn (mutex: *Mutex) #inline {
    _mutex_impl_terminate(mutex);
}

/// Lock mutex and enter critical section.
mutex_lock :: fn (mutex: *Mutex) #inline {
    _mutex_impl_lock(mutex);
}

mutex_try_lock :: fn (mutex: *Mutex) bool #inline {
    return _mutex_impl_try_lock(mutex);
}

/// Unlock previously locked mutex and leave critical section.
mutex_unlock :: fn (mutex: *Mutex) #inline {
    _mutex_impl_unlock(mutex);
}
